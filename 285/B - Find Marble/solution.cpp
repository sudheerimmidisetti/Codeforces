#include <bits/stdc++.h>using namespace std; using ll                = long long;using vec               = vector<ll>;using vecStr            = vector<string>;using vecChr            = vector<char>;using vecBool           = vector<bool>;using vec2d             = vector<vec>;using vecP_ll_ll        = vector<pair<ll, ll>>;using vecP_ll_str       = vector<pair<ll, string>>;using unmp_ll_ll        = unordered_map<ll, ll>;using unmp_chr_ll       = unordered_map<char, ll>;using unmp_str_ll       = unordered_map<string, ll>;using st_ll             = set<ll>;using st_chr            = set<char>;using st_str            = set<string>;using que_ll            = queue<ll>;using queP              = queue<pair<ll, ll>>; #define pb              push_back#define pp              pop_back#define ff              first#define ss              second#define all(x)          (x).begin(), (x).end()#define rall(x)         (x).rbegin(), (x).rend()#define sm(x, y, z)     (x).begin() + y, (x).begin() + z#define sz(x)           (int)(x).size()#define nl              endl const ll MOD            = 1e9 + 7;const ll INF            = LLONG_MAX;const ll NINF           = LLONG_MIN; vecBool isPrime(1e6 + 10, true); void generatePrimes() {    isPrime[0] = isPrime[1] = false;    for (int i = 2; i * i <= (ll)(1e6 + 10); i++) {        if (isPrime[i]) {            for (int j = i * i; j <= (ll)(1e6 + 10); j += i)                isPrime[j] = false;        }    }} vec arrayCreation(ll n) {    vec a(n);    for (auto &x : a)        cin >> x;        return a;} void solve() {    ll n, s, t;    cin >> n >> s >> t;        vec a = arrayCreation(n);        if (s == t)        cout << 0 << nl;    else {        ll shufflingCnt = 1, tmp = s;        while (tmp != t) {            tmp = a[tmp - 1];                        if (tmp == t)                break;            else if (tmp == s) {                shufflingCnt = -1;                break;            }                        shufflingCnt++;        }                cout << shufflingCnt << nl;    }} int main() {    ll t = 1;    // cin >> t;     // generatePrimes();    while (t--)        solve();}